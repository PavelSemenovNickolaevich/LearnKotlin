package theory.`7_Functions`

/*

Функция (метод в Java) - выполняет любой функционал.

Как и в других языках:
- имеет название
- возвращаемый тип (или ничего не возвращает)
- параметры (или без параметров)
- реализуют какую-то логику из бизнес-процесса

В Kotlin функции могут находиться как внутри класса, так и просто внутри файла kt (в отличие от Java, где функция может быть описана только внутри класса)


Примечания:
- название функции - с маленькой буквы, CamelCase
- не следует создавать слишком большие функции (много строк кода), лучше разбить на несколько (каждая со своей небольшой задачей)
- желательно группировать (располагать) функции рядом друг с другом по смыслу (можно упорядочить по алфавиту во вкладке Structure) - для лучшего чтения кода


При вызове функции - можно нажать Ctrl + P внутри скобок, чтобы увидеть все доступны параметры


В Kotlin для того, чтобы функция ничего не возвращала, используется тип Unit (его не обязательно указывать - еще сокращаем код) - это аналог void из Java (void в Java обязательно указывать)


https://kotlinlang.org/docs/reference/basic-syntax.html

*/




// правой кнопкой -> Run
// можете комментировать определенные строки функции и заново запускать проект, чтобы не запутаться при выводе результатов
fun main() {

    printText()

    printText("sample") // не возвращает никакой тип (просто печатает текст)

    var length = calcTextLength("test") // возвращает тип Int (длину текста)
    println("length = $length")


//  При вызове функции - можно нажать Ctrl + P внутри скобок, чтобы увидеть все доступны параметры
    var text1 = concatText("sam", "ple")  // несколько параметров у функции (порядок следования важен)
    println(text1)


    println("multuply = ${multiply(3,6)}") // вызов функции с укороченной записью

    // можно указывать названия параметров при вызове функции - тогда порядок следования параметров уже не важен
    var newText = concatText(text2 = "second text", text1 = "first text")
    println(newText)

}


// не возвращает никакой тип и не имеет параметров
fun printText() {
    println("without param and return value")
}


// не возвращает никакой тип (просто выполняет какой-то функционал внутри себя) - на самом деле по-умолчанию возвращает тип Unit, который можно не указывать
fun printText(text: String) { // принимает 1 параметр типа String
    println("text = $text")
}


// не возвращает никакой тип (просто выполняет какой-то функционал внутри себя) - на самом деле по-умолчанию возвращает тип Unit, который можно не указывать
fun calcTextLength(text: String): Int {
    return text.length
}


// несколько параметров у функции (не рекомендуется больше 5-6, иначе труднее читать код)
fun concatText(text1: String, text2: String): String { // функция возвращает тип String
    return "$text1$text2"
}


// "syntax sugar"
// более короткая запись - если функция не содержит сложного кода и просто возвращает какое-либо значение (возвращаемый тип определяется компилятором автоматически)
fun multiply(x: Int, y: Int) = x * y
