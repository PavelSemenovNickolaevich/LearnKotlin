package theory

/*

enum class - это специальный тип данных, где сущ-ет только ограниченный набор значений/объектов
Аналог enum в Java.

Используют, когда существует ограниченное кол-во значений (дни недели, месяцы и пр.) - чтобы они были стандартизированными для всего проекта

Меньше путаницы, код становится более строгим

https://kotlinlang.org/docs/reference/enum-classes.html


 */


// минимальный вариант использования
enum class CarType {
    TRACK, // значения разделяем запятой
    SEDAN, // значения часто называют enum value
    MINIVAN // каждое из значений является отдельным объектом, который создается автоматически при объявлении enum class

}


// можно добавлять переменные/константы
enum class ColorType(val str: String) {
    WHITE("white color"), // инициализация объекта со значением
    BLACK("black color") // каждый тип enum создается в единственном экземпляре (это важно)

}


// enum может иметь любые конструкторы (какие вам нужны по задаче)
enum class CompType(val str: String) {
    NOTEBOOK("notebook"),
    COMPUTER("computer"); // тут символ ";" обязателен, чтобы указать компилятору, что закончилось перечисление объектов и началось body (где можно описывать функции)

    //функция внутри enum class создается для каждого объекта (по-другому: каждый enum - NOTEBOOK, COMPUTER - имеет эту функцию)
    fun go(){
        println("go $str") // функция может обращаться к переменной/константе или вызывать другую функцию
    }

}


// правой кнопкой -> Run
// можете комментировать определенные строки функции и заново запускать проект, чтобы не запутаться при выводе результатов
fun main() {

    println(CarType.SEDAN)


    println(ColorType.BLACK.str)

    // по текстовому значению - получаем объект (ссылку)
    val color = ColorType.valueOf("WHITE") // конвертируем из текста в объект
    println(color)


    println("------")
    for (comp in CompType.values()) { // проходим по всем значениям enum class
        println(comp)
    }

    CompType.COMPUTER.go() // можно обращаться к функциям созданного enum
    println(CompType.COMPUTER.str) // можно получить переменную enum


}
