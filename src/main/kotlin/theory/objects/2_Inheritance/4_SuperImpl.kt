package theory.`2_Inheritance`


/*

Как и в Java - если в цепочке наследования - один и тот же метод будет переопределяться несколько раз - то, вызывая его через super, будет вызвана самая последняя (ближняя) реализация

Если в интерфейсе и родит. классе найдены одинаковые функции - с помощью super<> можно указать, какую реализацию хотите вызвать.

Поставьте курсор внутрь нужного класса и нажмите комбинации Ctrl + H (или Navigate -> Type hierarchy) - можно увидеть всех родителей и наследников - полезно для изучения дерева наследования

https://kotlinlang.org/docs/inheritance.html#overriding-rules

 */



// правой кнопкой -> Run
// можете комментировать определенные строки функции и заново запускать проект, чтобы не запутаться при выводе результатов
fun main() {

    var myComp = MyComp()
    myComp.on()


    var myMacBook = MyMacBook()
    myMacBook.on()
}


open class Comp {
    open fun on() { println("computer on (class)") } // реализация обычного класса
}

interface Notebook {
    fun on() { println("notebook on (interface)") } // дефолтная реализация в интерфейсе
}

interface Phone {
    fun on() { println("phone on (interface)") } // дефолтная реализация в интерфейсе
}


// класс наследуется от 1 класса и реализовывает 2 интерфейса
open class MyComp : Comp(), Notebook, Phone {

    // этот метод по сути переопределяет все вышестоящие методы on
    override fun on() { // если нажать Ctrl + ЛКМ на draw - то компилятор на выбор покажет несколько родительских реализаций

        // примечание: одной функцией мы реализовали 2 интерфейса

        // если интерфейсах и в родит. классе есть одинаковые методы - можно уточнить, какой из них мы хотим вызвать
        super<Comp>.on()
        super<Notebook>.on()
        super<Phone>.on()
    }
}


open class MyMacBook: MyComp() {

    override fun on() {
      //  super.on()
        // если написать super., то вы увидите, что компилятор определил только 1 super метод из класса MyComp, который "затер" (переопределил) все остальные вышестоящие методы
        println("MyMacBook on")
    }

}
