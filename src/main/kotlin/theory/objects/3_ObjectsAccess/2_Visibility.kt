package theory.`3_ObjectsAccess`


/*

Модификаторы доступа (видимости) - access modifiers

Особенность Kotlin - классы, функции, интерфейсы, переменные и пр. - можно объявлять как в файле, так и в классе - поэтому модификаторы доступа работают в зависимости от места нахождения.

Модификаторы:
- public (используется по-умолчанию, если не указан никакой модификатор) - видно из других классов, проектов и пр.
- private - доступ только внутри класса/файла (извне не сможете получить доступ)
- internal - доступ внутри модуля
- protected - private + доступ в классе/файле или дочерних классах

Модификаторы нужны для инкапсуляции объектов (внутреннюю реализацию скрывать, наружу выставлять только видимую часть - API)

Пульт от ТВ - внешний API-это кнопки, внутри (невидимая часть) - схемы и пр.


https://kotlinlang.org/docs/reference/visibility-modifiers.html


*/



internal var agePrivate = 10; // объявлена на уровне файла (не класса) - и видна только внутри файла

private class Person{

    fun test(){
        agePrivate = 10
    }

    private fun test2(){

    }


}

fun main() {
    var person = Person()

//    person.test2() // не видна функция, т.к. private
}
