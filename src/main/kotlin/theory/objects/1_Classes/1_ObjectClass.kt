package theory.`1_Classes`

/*

В отличие от Java-подобных языков - в Kotlin разрешатся иметь в одном файле несколько внешних классов (в этом случае название файла должно отражать смысл общего функционала)
Но желательно создавать одном файле только один класс, чтобы не было путаницы (тогда файл следует называть именем класса)
Либо, если в файле будут неск. классов, то они должны быть связаны по смыслу.


В Kotlin различают (при создании функций, переменных, констант и пр.):
- top-level: объявление на уровне файла (вне какого-либо класса)
- class-level: объявление внутри класса (подробности - далее в уроках)


Класс - слепок (образец), с помощью которого можно создавать любое кол-во объектов

https://kotlinlang.org/docs/classes.html

*/




// правой кнопкой -> Run
// можете комментировать определенные строки функции и заново запускать проект, чтобы не запутаться при выводе результатов
fun main() {

//    Для создания экземпляра класса (объекта) не нужно использовать ключевое слово new, как в Java

    var user =
        User() // вызывается конструктор без параметров, которые создается автоматически, т.к. никакие другие конструкторы не указаны
    val customer =
        Customer() // в константу customer нельзя будет присвоить новый объект

    // печать объектов (распечатает их хеш коды, т.к. не переопределен метод toString)
    println(user)
    println(customer)


}



// разрешается создавать несколько классов в одном файле .kt (в отличие от Java)

class User  // пустой класс (для примера) - можно без фигурных скобок

class Customer // пустой класс (для примера) - можно без фигурных скобок
