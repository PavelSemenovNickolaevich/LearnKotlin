package theory.syntax.`8_Nulls`


/*

Unwrapping - распаковка, извлечение

!! - явное (грубое) извлечение значения из контейнера - может привести к NPE - более опасный вариант
? - проверка на null - безопасный вариант


Оператор !! часто в других языках называют распаковкой (unwrapping) - открываем контейнер и получаем оттуда значение (или null)


Не путайте обязательное присвоение значения (null или любое значение) с проверкой на null - у них вообще разный смысл

 */


// правой кнопкой -> Run
// можете комментировать определенные строки функции и заново запускать проект, чтобы не запутаться при выводе результатов
fun main() {

    var name: String?// ? означает, что переменная nullable (может иметь null) - теперь в коде компилятор всегда будет делать проверку при использовании этой переменной
//    name = null // разрешается присвоение null, компилятор не ругается

//    println(name?.length) // приведет к KotlinNullPointerException

//    printText(name) // ошибка, т.к. функция ожидает String? , а может получает String (несоответствие типов)
//    printText(name!!) // name!!  превратит все выражение из String? в String - после этого уже можно передавать в функцию


}

